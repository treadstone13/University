@using X.PagedList.Mvc.Core
@using X.PagedList
@model University.Models.Course

@{
    ViewBag.Title = "Courses Page";   
}

<br />
<br />
<div class="row">
    @using (Html.BeginForm("AddCourse", "Home", FormMethod.Post))
    {
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @*<div class="form-group">
                <label for="exampleInputEmail1">ID</label>
                @Html.TextBoxFor(model => model.ID, null, new { @class = "form-control", placeholder = "Enter ID", id = "exampleInputUser1" })
                @Html.ValidationMessageFor(model => model.ID, null, new { @class = "text-danger" })
            </div>*@
        <div class="form-group">
            <label for="exampleInputEmail1">Title</label>
            @Html.TextBoxFor(model => model.Title, null, new { @class = "form-control", placeholder = "Enter LastName", id = "exampleInputUser1" })
            @Html.ValidationMessageFor(model => model.Title, null, new { @class = "text-danger" })
        </div>
        <div class="form-group">
            <label for="exampleInputPassword1">Credits</label>
            @Html.TextBoxFor(model => model.Credits, new { @class = "form-control", placeholder = "Enter FirstName", id = "exampleInputEmail1" })
            @Html.ValidationMessageFor(model => model.Credits, null, new { @class = "text-danger" })
        </div>
        <input class="btn btn-primary btn-block" type="submit" value="Add">
        <br />
        <br />
        <h3>Student List</h3>
        <div class="form-group">
            <table class="table">
                <tr>
                    <td><a asp-action="Course" asp-route-sortOrder="@ViewData["IDSortParm"]">ID</a></td>
                    <td>Title</td>
                    <td>Credits</td>
                    <td>Action</td>
                </tr>
                @foreach (var item in ViewBag.onePageOfCourse)
                {
                <tr>
                    <td>@item.CourseID</td>
                    <td>@item.Title</td>
                    <td>@item.Credits</td>
                    <td><a class="updateC">Update</a></td>
                    <td>@Html.ActionLink("Delete", "DeleteCourse", new { id = @item.CourseID })</td>

                </tr>


                }


            </table>
            @Html.PagedListPager((IPagedList)ViewBag.onePageOfCourse, page => Url.Action("Course", new { page }))
        </div>

    }


    <div id="myModal" class="modal fade" role="dialog">
        <div class="modal-dialog">

            <!-- Modal content-->
            @using (@Html.BeginForm("UpdateCourse", "Home", FormMethod.Post))
            {
                <div class="modal-content">
                    <div class="modal-header">
                        <button type="button" class="close" data-dismiss="modal">&times;</button>
                        <h4 class="modal-title">Modal Header</h4>
                    </div>
                    <div class="modal-body">
                        <div class="form-group">
                            <label for="exampleInputEmail1">ID</label>
                            @Html.TextBoxFor(model => model.CourseID, null, new { @class = "form-control", placeholder = "Enter ID", id = "CourseID" })
                            @Html.ValidationMessageFor(model => model.CourseID, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputEmail1">Title</label>
                            @Html.TextBoxFor(model => model.Title, null, new { @class = "form-control", placeholder = "Enter LastName", id = "exampleInputUser1" })
                            @Html.ValidationMessageFor(model => model.Title, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-group">
                            <label for="exampleInputPassword1">Credits</label>
                            @Html.TextBoxFor(model => model.Credits, new { @class = "form-control", placeholder = "Enter FirstName", id = "exampleInputEmail1" })
                            @Html.ValidationMessageFor(model => model.Credits, null, new { @class = "text-danger" })
                        </div>
                        <input class="btn btn-primary btn-block" type="submit" value="Update">
                    </div>
                    <div class="modal-footer">
                        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                    </div>
                </div>
            }
        </div>
    </div>


</div>
